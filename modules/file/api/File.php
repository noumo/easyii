<?php
namespace yii\easyii\modules\file\api;

use Yii;
use yii\data\ActiveDataProvider;
use yii\easyii\modules\file\models\File as FileModel;
use yii\web\NotFoundHttpException;
use yii\widgets\LinkPager;

/**
 * File module API
 * @package yii\easyii\modules\file\api
 *
 * @method static FileObject get(mixed $id_slug) Get a file by id or slug
 * @method static array items(array $options = []) Get list of files as FileObject objects
 * @method static mixed last(int $limit = 1) Get last files as FileObject objects
 * @method static string pages() returns pagination html generated by yii\widgets\LinkPager widget.
 * @method static \stdClass pagination() returns yii\data\Pagination object.
 */

class File extends \yii\easyii\components\API
{
    private $_adp;
    private $_item = [];

    public function api_items($options = [])
    {
        $result = [];

        $query = FileModel::find()->with('seo');

        if(!empty($options['where'])){
            $query->where($options['where']);
        }

        $this->_adp = new ActiveDataProvider([
            'query' => $query,
            'pagination' => !empty($options['pagination']) ? $options['pagination'] : []
        ]);
        if(!empty($options['orderBy'])){
            $query->orderBy($options['orderBy']);
        } else {
            $query->sort();
        }

        foreach($this->_adp->models as $model){
            $result[] = new FileObject($model);
        }
        return $result;
    }

    public function api_get($id_slug)
    {
        if(!isset($this->_item[$id_slug])) {
            $this->_item[$id_slug] = $this->findFile($id_slug);
        }
        return $this->_item[$id_slug];
    }

    public function api_last($limit = 1, $where = null)
    {
        $result = [];

        $query = FileModel::find()->with('seo')->sort()->limit($limit);
        if($where){
            $query->where($where);
        }
        foreach($query->all() as $item){
            $result[] = new FileObject($item);
        }
        return $result;
    }

    public function api_pagination()
    {
        return $this->_adp ? $this->_adp->pagination : null;
    }

    public function api_pages()
    {
        return $this->_adp ? LinkPager::widget(['pagination' => $this->_adp->pagination]) : '';
    }

    private function findFile($id_slug)
    {
        if(is_numeric($id_slug)) {
            $condition = ['or', 'id=:id_slug', 'slug=:id_slug'];
        } else {
            $condition = 'slug=:id_slug';
        }
        if(!($file = FileModel::find()->where($condition, [':id_slug' => $id_slug])->one())){
            throw new NotFoundHttpException(Yii::t('easyii', 'Not found'));
        }
        return new FileObject($file);
    }
}